package negocio;

import datos.Conexion;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import util.Funciones_Tabla;


public class JGUIForm extends javax.swing.JFrame {

    DropExcel de;
    Funciones_Tabla obj;
    /**
     * Creates new form JGUIForm
     */
    public JGUIForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        de = new DropExcel(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtHojas = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFilas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Agregar a BD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Seleccionar Archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Hojas Importadas");

        txtHojas.setText("0");

        jLabel3.setText("Filas Importadas");

        txtFilas.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtHojas, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtHojas)
                        .addComponent(jLabel3)
                        .addComponent(txtFilas)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        obj = new Funciones_Tabla();
        String consulta = JOptionPane.showInputDialog("Ingrese la consulta");
        int columnas = jTable1.getColumnCount();

        Object a, b, c, d, e, f, g, h, i, j, k, l, m, n, Ã±;

        for (int z = 0; z < jTable1.getRowCount(); z++) {

            try {

                switch (columnas) {
                    case 1:

                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        obj.Agregar1parametro(consulta, a);

                        break;
                    case 2:

                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        obj.Agregar2parametro(consulta, a, b);
                        break;
                    case 3:

                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        obj.Agregar3parametro(consulta, a, b, c);
                        break;
                    case 4:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        obj.Agregar4parametro(consulta, a, b, c, d);
                        break;
                    case 5:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        obj.Agregar5parametro(consulta, a, b, c, d, e);
                        break;

                    case 6:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        obj.Agregar6parametro(consulta, a, b, c, d, e, f);

                        break;
                    case 7:
                        
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        obj.Agregar7parametro(consulta, a, b, c, d, e, f, g);
                        break;
                    case 8:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        obj.Agregar8parametro(consulta, a, b, c, d, e, f, g, h);
                        break;
                    case 9:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        obj.Agregar9parametro(consulta, a, b, c, d, e, f, g, h, i);
                        break;
                    case 10:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        obj.Agregar10parametro(consulta, a, b, c, d, e, f, g, h, i, j);
                        break;
                    case 11:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        if (jTable1.getValueAt(z, 10).toString().matches("[0-9]+")) {
                            k = Integer.parseInt(jTable1.getValueAt(z, 10).toString());
                        } else if (jTable1.getValueAt(z, 10).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 10).toString().matches("[0-9.]+")) {
                            k = Double.parseDouble(jTable1.getValueAt(z, 10).toString().replace(",", "."));
                        } else {
                            k = jTable1.getValueAt(z, 10).toString();
                        }

                        obj.Agregar11parametro(consulta, a, b, c, d, e, f, g, h, i, j, k);
                        break;
                    case 12:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        if (jTable1.getValueAt(z, 10).toString().matches("[0-9]+")) {
                            k = Integer.parseInt(jTable1.getValueAt(z, 10).toString());
                        } else if (jTable1.getValueAt(z, 10).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 10).toString().matches("[0-9.]+")) {
                            k = Double.parseDouble(jTable1.getValueAt(z, 10).toString().replace(",", "."));
                        } else {
                            k = jTable1.getValueAt(z, 10).toString();
                        }

                        if (jTable1.getValueAt(z, 11).toString().matches("[0-9]+")) {
                            l = Integer.parseInt(jTable1.getValueAt(z, 11).toString());
                        } else if (jTable1.getValueAt(z, 11).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 11).toString().matches("[0-9.]+")) {
                            l = Double.parseDouble(jTable1.getValueAt(z, 11).toString().replace(",", "."));
                        } else {
                            l = jTable1.getValueAt(z, 11).toString();
                        }

                        obj.Agregar12parametro(consulta, a, b, c, d, e, f, g, h, i, j, k, l);
                        break;
                    case 13:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        if (jTable1.getValueAt(z, 10).toString().matches("[0-9]+")) {
                            k = Integer.parseInt(jTable1.getValueAt(z, 10).toString());
                        } else if (jTable1.getValueAt(z, 10).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 10).toString().matches("[0-9.]+")) {
                            k = Double.parseDouble(jTable1.getValueAt(z, 10).toString().replace(",", "."));
                        } else {
                            k = jTable1.getValueAt(z, 10).toString();
                        }

                        if (jTable1.getValueAt(z, 11).toString().matches("[0-9]+")) {
                            l = Integer.parseInt(jTable1.getValueAt(z, 11).toString());
                        } else if (jTable1.getValueAt(z, 11).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 11).toString().matches("[0-9.]+")) {
                            l = Double.parseDouble(jTable1.getValueAt(z, 11).toString().replace(",", "."));
                        } else {
                            l = jTable1.getValueAt(z, 11).toString();
                        }

                        if (jTable1.getValueAt(z, 12).toString().matches("[0-9]+")) {
                            m = Integer.parseInt(jTable1.getValueAt(z, 12).toString());
                        } else if (jTable1.getValueAt(z, 12).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 12).toString().matches("[0-9.]+")) {
                            m = Double.parseDouble(jTable1.getValueAt(z, 12).toString().replace(",", "."));
                        } else {
                            m = jTable1.getValueAt(z, 12).toString();
                        }

                        obj.Agregar13parametro(consulta, a, b, c, d, e, f, g, h, i, j, k, l, m);
                        break;
                    case 14:
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        if (jTable1.getValueAt(z, 10).toString().matches("[0-9]+")) {
                            k = Integer.parseInt(jTable1.getValueAt(z, 10).toString());
                        } else if (jTable1.getValueAt(z, 10).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 10).toString().matches("[0-9.]+")) {
                            k = Double.parseDouble(jTable1.getValueAt(z, 10).toString().replace(",", "."));
                        } else {
                            k = jTable1.getValueAt(z, 10).toString();
                        }

                        if (jTable1.getValueAt(z, 11).toString().matches("[0-9]+")) {
                            l = Integer.parseInt(jTable1.getValueAt(z, 11).toString());
                        } else if (jTable1.getValueAt(z, 11).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 11).toString().matches("[0-9.]+")) {
                            l = Double.parseDouble(jTable1.getValueAt(z, 11).toString().replace(",", "."));
                        } else {
                            l = jTable1.getValueAt(z, 11).toString();
                        }

                        if (jTable1.getValueAt(z, 12).toString().matches("[0-9]+")) {
                            m = Integer.parseInt(jTable1.getValueAt(z, 12).toString());
                        } else if (jTable1.getValueAt(z, 12).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 12).toString().matches("[0-9.]+")) {
                            m = Double.parseDouble(jTable1.getValueAt(z, 12).toString().replace(",", "."));
                        } else {
                            m = jTable1.getValueAt(z, 12).toString();
                        }

                        if (jTable1.getValueAt(z, 13).toString().matches("[0-9]+")) {
                            n = Integer.parseInt(jTable1.getValueAt(z, 13).toString());
                        } else if (jTable1.getValueAt(z, 13).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 13).toString().matches("[0-9.]+")) {
                            n = Double.parseDouble(jTable1.getValueAt(z, 13).toString().replace(",", "."));
                        } else {
                            n = jTable1.getValueAt(z, 13).toString();
                        }

                        obj.Agregar14parametro(consulta, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
                        break;
                        
                    case 15:
                        
                        if (jTable1.getValueAt(z, 0).toString().matches("[0-9]+")) {
                            a = Integer.parseInt(jTable1.getValueAt(z, 0).toString());
                        } else if (jTable1.getValueAt(z, 0).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 0).toString().matches("[0-9.]+")) {
                            a = Double.parseDouble(jTable1.getValueAt(z, 0).toString().replace(",", "."));
                        } else {
                            a = jTable1.getValueAt(z, 0).toString();
                        }

                        if (jTable1.getValueAt(z, 1).toString().matches("[0-9]+")) {
                            b = Integer.parseInt(jTable1.getValueAt(z, 1).toString());
                        } else if (jTable1.getValueAt(z, 1).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 1).toString().matches("[0-9.]+")) {
                            b = Double.parseDouble(jTable1.getValueAt(z, 1).toString().replace(",", "."));
                        } else {
                            b = jTable1.getValueAt(z, 1).toString();
                        }

                        if (jTable1.getValueAt(z, 2).toString().matches("[0-9]+")) {
                            c = Integer.parseInt(jTable1.getValueAt(z, 2).toString());
                        } else if (jTable1.getValueAt(z, 2).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 2).toString().matches("[0-9.]+")) {
                            c = Double.parseDouble(jTable1.getValueAt(z, 2).toString().replace(",", "."));
                        } else {
                            c = jTable1.getValueAt(z, 2).toString();
                        }

                        if (jTable1.getValueAt(z, 3).toString().matches("[0-9]+")) {
                            d = Integer.parseInt(jTable1.getValueAt(z, 3).toString());
                        } else if (jTable1.getValueAt(z, 3).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 3).toString().matches("[0-9.]+")) {
                            d = Double.parseDouble(jTable1.getValueAt(z, 3).toString().replace(",", "."));
                        } else {
                            d = jTable1.getValueAt(z, 3).toString();
                        }

                        if (jTable1.getValueAt(z, 4).toString().matches("[0-9]+")) {
                            e = Integer.parseInt(jTable1.getValueAt(z, 4).toString());
                        } else if (jTable1.getValueAt(z, 4).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 4).toString().matches("[0-9.]+")) {
                            e = Double.parseDouble(jTable1.getValueAt(z, 4).toString().replace(",", "."));
                        } else {
                            e = jTable1.getValueAt(z, 4).toString();
                        }

                        if (jTable1.getValueAt(z, 5).toString().matches("[0-9]+")) {
                            f = Integer.parseInt(jTable1.getValueAt(z, 5).toString());
                        } else if (jTable1.getValueAt(z, 5).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 5).toString().matches("[0-9.]+")) {
                            f = Double.parseDouble(jTable1.getValueAt(z, 5).toString().replace(",", "."));
                        } else {
                            f = jTable1.getValueAt(z, 5).toString();
                        }

                        if (jTable1.getValueAt(z, 6).toString().matches("[0-9]+")) {
                            g = Integer.parseInt(jTable1.getValueAt(z, 6).toString());
                        } else if (jTable1.getValueAt(z, 6).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 6).toString().matches("[0-9.]+")) {
                            g = Double.parseDouble(jTable1.getValueAt(z, 6).toString().replace(",", "."));
                        } else {
                            g = jTable1.getValueAt(z, 6).toString();
                        }

                        if (jTable1.getValueAt(z, 7).toString().matches("[0-9]+")) {
                            h = Integer.parseInt(jTable1.getValueAt(z, 7).toString());
                        } else if (jTable1.getValueAt(z, 7).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 7).toString().matches("[0-9.]+")) {
                            h = Double.parseDouble(jTable1.getValueAt(z, 7).toString().replace(",", "."));
                        } else {
                            h = jTable1.getValueAt(z, 7).toString();
                        }

                        if (jTable1.getValueAt(z, 8).toString().matches("[0-9]+")) {
                            i = Integer.parseInt(jTable1.getValueAt(z, 8).toString());
                        } else if (jTable1.getValueAt(z, 8).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 8).toString().matches("[0-9.]+")) {
                            i = Double.parseDouble(jTable1.getValueAt(z, 8).toString().replace(",", "."));
                        } else {
                            i = jTable1.getValueAt(z, 8).toString();
                        }

                        if (jTable1.getValueAt(z, 9).toString().matches("[0-9]+")) {
                            j = Integer.parseInt(jTable1.getValueAt(z, 9).toString());
                        } else if (jTable1.getValueAt(z, 9).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 9).toString().matches("[0-9.]+")) {
                            j = Double.parseDouble(jTable1.getValueAt(z, 9).toString().replace(",", "."));
                        } else {
                            j = jTable1.getValueAt(z, 9).toString();
                        }

                        if (jTable1.getValueAt(z, 10).toString().matches("[0-9]+")) {
                            k = Integer.parseInt(jTable1.getValueAt(z, 10).toString());
                        } else if (jTable1.getValueAt(z, 10).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 10).toString().matches("[0-9.]+")) {
                            k = Double.parseDouble(jTable1.getValueAt(z, 10).toString().replace(",", "."));
                        } else {
                            k = jTable1.getValueAt(z, 10).toString();
                        }

                        if (jTable1.getValueAt(z, 11).toString().matches("[0-9]+")) {
                            l = Integer.parseInt(jTable1.getValueAt(z, 11).toString());
                        } else if (jTable1.getValueAt(z, 11).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 11).toString().matches("[0-9.]+")) {
                            l = Double.parseDouble(jTable1.getValueAt(z, 11).toString().replace(",", "."));
                        } else {
                            l = jTable1.getValueAt(z, 11).toString();
                        }

                        if (jTable1.getValueAt(z, 12).toString().matches("[0-9]+")) {
                            m = Integer.parseInt(jTable1.getValueAt(z, 12).toString());
                        } else if (jTable1.getValueAt(z, 12).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 12).toString().matches("[0-9.]+")) {
                            m = Double.parseDouble(jTable1.getValueAt(z, 12).toString().replace(",", "."));
                        } else {
                            m = jTable1.getValueAt(z, 12).toString();
                        }

                        if (jTable1.getValueAt(z, 13).toString().matches("[0-9]+")) {
                            n = Integer.parseInt(jTable1.getValueAt(z, 13).toString());
                        } else if (jTable1.getValueAt(z, 13).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 13).toString().matches("[0-9.]+")) {
                            n = Double.parseDouble(jTable1.getValueAt(z, 13).toString().replace(",", "."));
                        } else {
                            n = jTable1.getValueAt(z, 13).toString();
                        }

                        if (jTable1.getValueAt(z, 14).toString().matches("[0-9]+")) {
                            Ã± = Integer.parseInt(jTable1.getValueAt(z, 14).toString());
                        } else if (jTable1.getValueAt(z, 14).toString().matches("[0-9,]+") || jTable1.getValueAt(z, 14).toString().matches("[0-9.]+")) {
                            Ã± = Double.parseDouble(jTable1.getValueAt(z, 14).toString().replace(",", "."));
                        } else {
                            Ã± = jTable1.getValueAt(z, 14).toString();
                        }

                        obj.Agregar15parametro(consulta, a, b, c, d, e, f, g, h, i, j, k, l, m, n, Ã±);
                        break;
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "se ha agregado a la bd con exito");
    }//GEN-LAST:event_jButton1ActionPerformed


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser seleccionado = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel xls", "xls");
        seleccionado.setFileFilter(filter);
        File archivo;
        if (seleccionado.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            de.readXLS2(archivo);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JGUIForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JLabel txtFilas;
    public static javax.swing.JLabel txtHojas;
    // End of variables declaration//GEN-END:variables
}
